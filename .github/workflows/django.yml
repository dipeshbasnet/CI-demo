name: Django CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.9 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        id: test
        run: |
          test_result=$(python manage.py test)
          echo "$test_result"  # Print the test results
          echo "::set-output name=test_result::$test_result"  # Set the test result as an output variable

  deploy:
    needs: build  # Specify that the deploy job depends on the success of the build job
    runs-on: ubuntu-latest

    steps:
      - name: Deploy To Server
        if: needs.build.outputs['test_result'] == '0'  # Only deploy if all tests pass
        run: |
          uses: easingthemes/ssh-deploy@main
          env:
            SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
            REMOTE_HOST: ${{ secrets.HOST_DNS }}
            REMOTE_USER: ${{ secrets.USERNAME }}
            TARGET: ${{ secrets.TARGET_DIR }}
          echo "Pushed to the server"

      - name: Restart the server
          if: needs.build.outputs['test_result'] == '0'  # Only deploy if all tests pass
          echo "Executing remote ssh commands using ssh key"
          uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.HOST_DNS }}
            username: ${{ secrets.USERNAME }}
            key: ${{ secrets.EC2_SSH_KEY }}
            script: |
              source env/bin/activate
              cd app
              python manage.py collectstatic
              echo "Restarting services"
              sudo systemctl reload nginx
              circusctl reload
              echo "Deployment Complete!"
